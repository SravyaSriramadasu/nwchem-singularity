name: nwchem_apptainer

on:
  schedule:
    - cron: '0 0 * * SUN'
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  build_image:
    runs-on: ubuntu-20.04
    strategy:
        fail-fast: false
        matrix:
          folder:
            - nwchem-dev.ompi41x.apptainer
    steps:
    - name: Checkout nwchem-singularity source
      uses: actions/checkout@v3
    - name: Setup cache
      id: setup-cache
      uses: actions/cache@v3
      with:
        path: |
          ~/cache
        key: ${{ matrix.folder}}-nwchemcache-apptainer-v000
    - name: fetch cache
      if: steps.setup-cache.outputs.cache-hit == 'true'
      run: |
        ls -lart ~/cache
        if [[ -f ~/cache/ompi/lib/libmpi.so ]]; then \
        echo "ompi cache present" ; \
        fi
        if [[ -f ~/cache/libext/lib/libnwc_openblas.a ]]; then \
        echo "libext cache present" ; \
        fi
        if [[ -f ~/cache/simint.l5_p5_d1.install/lib/libnwc_simint.a ]]; then \
        echo "simint cache present" ; \
        fi
    - uses: eWaterCycle/setup-apptainer@v1
      with:
        apptainer-version: 1.0.3
    - name: Checkout nwchem source
      uses: actions/checkout@v3
      with:
        repository: nwchemgit/nwchem
        clean: false
        path: nwchem
    - name: build a apptainer container
      run: |
        cd ${{ matrix.folder }}
        apptainer build --fakeroot ${{ matrix.folder }}.simg  Singularity
    - name: store cache
      run: |
        mkdir -p ~/cache || true
        cd ${{ matrix.folder }}
        apptainer exec ${{ matrix.folder }}.simg cp -r /opt/ompi ~/cache
        apptainer exec ${{ matrix.folder }}.simg cp -rv /nwchem/src/libext ~/cache/. ||true
        apptainer exec ${{ matrix.folder }}.simg ls -la /nwchem/src/NWints/simint/libsimint_source/simint.l5_p5_d1.install || true
        apptainer exec ${{ matrix.folder }}.simg ls -la /nwchem/src/NWints/simint/libsimint_source/ || true
        apptainer exec ${{ matrix.folder }}.simg ls -la /nwchem/src/NWints/simint || true
        apptainer exec ${{ matrix.folder }}.simg ls -la /nwchem/src/NWints/ || true
        apptainer exec ${{ matrix.folder }}.simg cp -rv /nwchem/src/NWints/simint/libsimint_source/simint.l5_p5_d1.install ~/cache/. ||true
        echo "cache stored"
        ls -l ~/cache
        ls -R ~/cache
    - name: find image file
      run: |
        cd ${{ matrix.folder }}
        find . -name ${{ matrix.folder }}.simg
        cd ..
        find . -name ${{ matrix.folder }}.simg
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.folder }}
        path: ${{ matrix.folder }}/${{ matrix.folder }}.simg
    - name: builddate
      id: build-date
      run: |
        echo "::set-output name=date::$(TZ=America/Los_Angeles date +%Y%m%d_%H%M%S)"
    - name: push to ghcr.io
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | apptainer remote login -u ${{ github.actor }} --password-stdin oras://ghcr.io
        apptainer remote list
        apptainer push ${{ matrix.folder }}/${{ matrix.folder }}.simg oras://ghcr.io/${{ github.repository }}/${{ matrix.folder }}:${{ steps.build-date.outputs.date }}
        apptainer push ${{ matrix.folder }}/${{ matrix.folder }}.simg oras://ghcr.io/${{ github.repository }}/${{ matrix.folder }}:latest
    - name: test image with apptainer
      run: |
        pwd
        ls -la
        rm -f */*simg
        apptainer pull -F ${{ matrix.folder }}/${{ matrix.folder }}.simg oras://ghcr.io/${{ github.repository }}/${{ matrix.folder }}:${{ steps.build-date.outputs.date }}
        cd nwchem/QA
        export UCX_TLS=tcp,self
        export UCX_POSIX_USE_PROC_LINK=n
        export PATH=/opt/ompi/bin:$PATH
        export MPIRUN_NPOPT="-x UCX_POSIX_USE_PROC_LINK=n -x UCX_TLS=tcp,self -n"
        export LD_LIBRARY_PATH=/opt/ompi/lib:$LD_LIBRARY_PATH
        mkdir -p /opt || true
        rsync -a ~/cache/ompi /opt/.
        which mpirun
        ldd `which mpirun`
        export NWCHEM_EXECUTABLE="apptainer exec oras://ghcr.io/edoapra/nwchem-singularity/nwchem-dev.ompi41x.apptainer:latest nwchem"
        ./runtests.mpi.unix procs 2 dft_he2+
        ./runtests.mpi.unix procs 2 h2o_opt

    - name: Install Singularity Dependencies
      run: |
        apt-get update && apt-get install -y \
        libgpgme11-dev squashfs-tools libseccomp-dev \
        pkg-config cryptsetup-bin libseccomp2 runc libglib2.0-0 || true
    - name: Install Singularity CE
        env:
          SG_VER: 3.10.3
        run: |
          apt-get install -y wget || true
          wget https://github.com/sylabs/singularity/releases/download/v${SG_VER}/singularity-ce_${SG_VER}-focal_amd64.deb
          dpkg -i singularity-ce_${SG_VER}-focal_amd64.deb
          which singularity
          singularity version
    - name: test image with singularity
      run: |
        pwd
        ls -la
        rm -f */*simg
        singularity pull -F ${{ matrix.folder }}/${{ matrix.folder }}.simg oras://ghcr.io/${{ github.repository }}/${{ matrix.folder }}:${{ steps.build-date.outputs.date }}
        cd nwchem/QA
        export UCX_TLS=tcp,self
        export UCX_POSIX_USE_PROC_LINK=n
        export PATH=/opt/ompi/bin:$PATH
        export MPIRUN_NPOPT="-x UCX_POSIX_USE_PROC_LINK=n -x UCX_TLS=tcp,self -n"
        export LD_LIBRARY_PATH=/opt/ompi/lib:$LD_LIBRARY_PATH
        export NWCHEM_EXECUTABLE="singularity exec oras://ghcr.io/edoapra/nwchem-singularity/nwchem-dev.ompi41x.apptainer:latest nwchem"
        ./runtests.mpi.unix procs 2 dft_he2+
        ./runtests.mpi.unix procs 2 h2o_opt
